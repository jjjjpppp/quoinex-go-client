version: 2.1

executors:
   default:
     working_directory: /go/src/github.com/jjjjpppp/quoinex-go-client
     docker:
       - image: circleci/golang:1.11.5

commands:
  restore_go_libraries:
    steps:
      - restore_cache:
          keys:
            - go-libraries-{{ checksum "Gopkg.lock" }}

  save_go_libraries:
    steps:
      - save_cache:
          key: go-libraries-{{ checksum "Gopkg.lock" }}
          paths:
            - guoinex-go-client/vendor/

jobs:
  build:
    executor:
      name: default
    steps:
      - checkout
      - restore_go_libraries
      - run: printenv
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: dep ensure
      - run: go test -v ./...
      - save_go_libraries
      - persist_to_workspace:
          root: .
          paths:
            - .
  lint:
    executor:
      name: default
    steps:
      - attach_workspace:
          at: .
      - run: go get -u golang.org/x/lint/golint
      - run: printenv
      - run: golint v2
  create_image:
    executor:
      name: default
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mkdir ~/bin
            mv /tmp/docker/* ~/bin
            export PATH="~/bin:$PATH"
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t   jjjjpppp/circleci-demo-docker:$TAG .

workflows:
  version: 2
  test_and_lint:
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              only: master
      - lint:
          context: org-global
          requires:
            - build
      - create_image:
          requires:
            - lint

